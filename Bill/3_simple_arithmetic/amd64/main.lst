     1                                  section .data
     2 00000000 0002000000000000        	integer1	dq		200h
     3 00000008 5500000000000000        	integer2	dq		55h
     4                                  
     5                                  section .bss
     6                                  section .text
     7                                  global  _start 
     8                                  	_start:
     9                                  
    10 00000000 B800010000              		mov		rax,	100h		
    11 00000005 480500020000            		add		rax, 	200h
    12 0000000B 482D00010000            		sub		rax,	100h
    13                                  
    14 00000011 488B0425[00000000]      		mov		rax,	[integer1]
    15 00000019 48030425[08000000]      		add		rax,	[integer2]
    16                                  
    17                                  ;		add 	[integer1], [integer2] <- to nie zadziaÅ‚a. Jedna z tych wartosci musi byc w rejestrach cpu
    18                                  
    19 00000021 48FFC8                  		dec		rax
    20 00000024 48FFC0                  		inc		rax
    21                                  
    22 00000027 48B8FFFFFFFFFFFFFF-     		mov		rax,	0fffffffffffffffh
    22 00000030 0F                 
    23 00000031 4883C001                		add		rax, 	1
    24 00000035 7200                    		jc		carryLabel
    25                                  		
    26                                  	
    27                                  	carryLabel:
    28 00000037 90                      		nop
    29                                  
    30                                  		
    31                                  
    32                                  
    33                                  
    34                                  
    35                                  
    36                                  
    37                                  
    38                                  
    39                                  
    40                                  
    41                                  
    42                                  
    43 00000038 EB00                    		jmp		_finish	
    44                                  		
    45                                  	_finish:
    46 0000003A B83C000000              		mov		rax, 60					;60 = system exit
    47 0000003F BF00000000              		mov		rdi, 0					;0 = return code
    48 00000044 0F05                    		syscall							;Poke the kernel
